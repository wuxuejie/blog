{"version":3,"sources":["webpack://example-react-intl/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://example-react-intl/./node_modules/react-intl/lib/src/components/useIntl.js","webpack://example-react-intl/./node_modules/gatsby-theme-i18n/src/components/localized-link.js","webpack://example-react-intl/./node_modules/gatsby-theme-i18n/src/components/mdx-link.js","webpack://example-react-intl/./node_modules/gatsby-theme-i18n/src/components/locales-list.js","webpack://example-react-intl/./src/components/layout.js","webpack://example-react-intl/./src/components/seo.js","webpack://example-react-intl/./src/pages/index.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","useIntl","intl","LocalizedLink","to","language","props","useLocalization","defaultLang","prefixDefault","locale","linkLocale","localizedPath","path","MdxLink","href","children","test","isFile","LocalesList","config","map","code","localName","name","components","a","formatMessage","id","MDXProvider","description","title","site","useStaticQuery","metaDescription","siteMetadata","titleTemplate","content","author","data","allFile","nodes","node","childMdx","frontmatter","slug"],"mappings":"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","file":"component---src-pages-index-js-f4a92013ffe49e05d781.js","sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n  var intl = React.useContext(Context);\n  invariantIntlContext(intl);\n  return intl;\n}","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { localizedPath } from \"../helpers\"\nimport { useLocalization } from \"../hooks/use-localization\"\n\nexport const LocalizedLink = ({ to, language, ...props }) => {\n  const { defaultLang, prefixDefault, locale } = useLocalization()\n  const linkLocale = language || locale\n\n  return (\n    <Link\n      {...props}\n      to={localizedPath({\n        defaultLang,\n        prefixDefault,\n        locale: linkLocale,\n        path: to,\n      })}\n    />\n  )\n}\n","import * as React from \"react\"\nimport { LocalizedLink } from \"./localized-link\"\n\nconst isHash = (str) => /^#/.test(str)\nconst isInternal = (to) => /^\\/(?!\\/)/.test(to)\nconst isFile = (to) => /\\..+$/.test(to)\n\n// Only use <LocalizedLink /> for internal links that aren't hashes or files\nexport function MdxLink({ href, children, ...props }) {\n  if (isHash(href) || !isInternal(href) || isFile(href)) {\n    return (\n      <a {...props} href={href}>\n        {children}\n      </a>\n    )\n  } else {\n    return (\n      <LocalizedLink {...props} to={href}>\n        {children}\n      </LocalizedLink>\n    )\n  }\n}\n","import * as React from \"react\"\nimport { useLocalization } from \"../hooks/use-localization\"\n\nexport const LocalesList = () => {\n  const { config } = useLocalization()\n\n  return (\n    <ul>\n      {config.map((locale) => (\n        <li key={locale.code}>\n          {locale.localName} ({locale.name})\n        </li>\n      ))}\n    </ul>\n  )\n}\n","import { MDXProvider } from \"@mdx-js/react\"\r\nimport { LocalizedLink, MdxLink } from \"gatsby-theme-i18n\"\r\nimport * as React from \"react\"\r\nimport { useIntl } from \"react-intl\"\r\n\r\nconst components = {\r\n  a: MdxLink,\r\n}\r\n\r\nconst Layout = ({ children }) => {\r\n  const intl = useIntl()\r\n  return (\r\n    <React.Fragment>\r\n      <header>\r\n        <LocalizedLink to=\"/\">{intl.formatMessage({ id: \"home\" })}</LocalizedLink>\r\n      </header>\r\n      <main>\r\n        <MDXProvider components={components}>{children}</MDXProvider>\r\n      </main>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import * as React from \"react\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet title={title} titleTemplate={`%s | ${site.siteMetadata.title}`}>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta name=\"og:title\" content={title} />\r\n      <meta name=\"og:description\" content={metaDescription} />\r\n      <meta name=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata.author} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import { graphql } from \"gatsby\"\r\nimport { LocalesList, LocalizedLink } from \"gatsby-theme-i18n\"\r\nimport * as React from \"react\"\r\nimport { useIntl } from \"react-intl\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst Index = ({ data }) => {\r\n  const intl = useIntl()\r\n  return (\r\n    <Layout>\r\n      <Seo title={intl.formatMessage({ id: \"home\" })} />\r\n      <h1>{intl.formatMessage({ id: \"helloWorld\" })}</h1>\r\n      <p>{intl.formatMessage({ id: \"indexNote\" })}</p>\r\n      <p>\r\n        <LocalizedLink to=\"/page-2/\">\r\n          {intl.formatMessage({ id: \"secondPageLink\" })}\r\n        </LocalizedLink>\r\n      </p>\r\n      <p>\r\n        <LocalizedLink to=\"/page-3/\">\r\n          {intl.formatMessage({ id: \"thirdPageLink\" })}\r\n        </LocalizedLink>\r\n      </p>\r\n      <p>\r\n        <LocalizedLink to=\"/\" language=\"zh-cn\">\r\n          {intl.formatMessage({ id: \"secondPageGermanLink\" })}\r\n        </LocalizedLink>\r\n      </p>\r\n      <p>\r\n        <LocalizedLink to=\"/\" language=\"en\">\r\n          {intl.formatMessage({ id: \"indexPageEnglishLink\" })}\r\n        </LocalizedLink>\r\n      </p>\r\n      <ul>\r\n        {data.allFile.nodes.map(({ childMdx: node }) => (\r\n          <li key={node.frontmatter.slug}>\r\n            <LocalizedLink to={node.frontmatter.slug}>\r\n              {node.frontmatter.title}\r\n            </LocalizedLink>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h2>{intl.formatMessage({ id: \"overviewLang\" })}</h2>\r\n      <LocalesList />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Index\r\n\r\nexport const query = graphql`\r\n  query($locale: String!) {\r\n    allFile(\r\n      filter: {\r\n        sourceInstanceName: { eq: \"blog\" }\r\n        childMdx: { fields: { locale: { eq: $locale } } }\r\n      }\r\n    ) {\r\n      nodes {\r\n        childMdx {\r\n          frontmatter {\r\n            slug\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}